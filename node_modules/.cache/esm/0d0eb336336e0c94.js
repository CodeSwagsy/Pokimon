let GREEN,RED,YELLOW,ANSI,BLUE,CYAN,randomAttackSkill;_336‍.x([["Pokemon",()=>Pokemon],["AttackSkill",()=>AttackSkill]]);_336‍.w("./main",[["GREEN",["GREEN"],function(v){GREEN=v}],["RED",["RED"],function(v){RED=v}],["YELLOW",["YELLOW"],function(v){YELLOW=v}],["ANSI",["ANSI"],function(v){ANSI=v}],["BLUE",["BLUE"],function(v){BLUE=v}],["CYAN",["CYAN"],function(v){CYAN=v}],["randomAttackSkill",["randomAttackSkill"],function(v){randomAttackSkill=v}]]);


       class Pokemon {
  constructor(name, health, magic, skills, counter, healthPotion, magicPotion) {
    this.name = name;
    this.health = health;
    this.magic = magic;
    this.skills = [];
    this.counter = 0;
    this.healthPotion = 5;
    this.magicPotion = 5;
  }
  learnAttackSkill(newSkill) {
    if (newSkill instanceof AttackSkill) {
      this.skills.push(newSkill);
    } else {
      console.log("This Skill is not in list");
    }
  }
  showStatus() {
    console.log(
      `${this.name} currently has ${this.health} health and ${this.magic} magic.`
    );
  }
  getMagic() {
    if (this.magicPotion > 0) {
      const randomMagic = Math.floor(Math.random() * 50);
      this.magic += randomMagic;
      this.magicPotion--;
      console.log(
        `\n${this.name} uses ${_336‍.a("BLUE",BLUE)}magic potion.${_336‍.a("ANSI",ANSI)} There are ${this.magicPotion} left. ${this.name} gained ${_336‍.a("BLUE",BLUE)}${randomMagic} magic.${_336‍.a("ANSI",ANSI)} ${this.name} magic is now ${_336‍.a("BLUE",BLUE)}${this.magic}.${_336‍.a("ANSI",ANSI)}\n`
      );
      return randomMagic;
    } else {
      console.log(`${this.name} dont has any magic potions!`);
    }
  }
  getHealth() {
    if (this.healthPotion > 0) {
      const randomHealth = Math.floor(Math.random() * 50);
      this.health += randomHealth;
      this.healthPotion--;
      console.log(
        `\n${this.name} uses ${_336‍.a("BLUE",BLUE)}health potion.${_336‍.a("ANSI",ANSI)} There are ${this.healthPotion} left. ${this.name} gained ${_336‍.a("BLUE",BLUE)}${randomHealth} health.${_336‍.a("ANSI",ANSI)} ${this.name} health is now ${_336‍.a("BLUE",BLUE)}${this.health}.${_336‍.a("ANSI",ANSI)}\n`
      );
      return randomHealth;
    } else {
      console.log(`${this.name} dont has any health potions!`);
    }
  }
  showSkills() {
    console.log(`\nSkills learned by ${this.name}:\n`);
    if (this.skills.length === 0) {
      console.log("No skills learned yet.");
    } else {
      this.skills.forEach((skill) => {
        console.log(
          `${_336‍.a("BLUE",BLUE)}${skill.attack}${_336‍.a("ANSI",ANSI)} (Damage: ${skill.damage}, Magic: ${skill.magic})`
        );
      });
    }
  }
  hasEnoughMagic(skillName) {
    const skill = this.skills
      .flat()
      .find((skill) => skill.attack === skillName);
    if (skill) {
      const hasEnoughMagic = this.magic >= skill.magic;
      return hasEnoughMagic;
    }

    return false;
  }

  isAlive() {
    return this.health > 0;
  }
  attack(skillName, opponent) {
    if (this.hasEnoughMagic(skillName)) {
      const skill = this.skills.find((skill) => skill.attack === skillName);
      if (skill) {
        this.magic -= skill.magic;
        let critChance = [Math.floor(Math.random() * 10)];
        if (critChance >= 8) {
          skill.damage = skill.damage * 2;
          opponent.health -= skill.damage;
          this.counter++;
          console.log(
            `\n${_336‍.a("CYAN",CYAN)}<%%%%|==========> Attack Start${_336‍.a("ANSI",ANSI)}\n\n${_336‍.a("RED",RED)}CRITICAL HIT!${_336‍.a("ANSI",ANSI)}\n\n${_336‍.a("GREEN",GREEN)}${this.name}${_336‍.a("ANSI",ANSI)} attacks ${_336‍.a("RED",RED)}${opponent.name}${_336‍.a("ANSI",ANSI)} with ${_336‍.a("BLUE",BLUE)}${skill.attack}${_336‍.a("ANSI",ANSI)} inflicting ${_336‍.a("RED",RED)}${skill.damage} critical damage.${_336‍.a("ANSI",ANSI)}\n`
          );
          this.showStatus();
          opponent.showStatus();
          console.log(`\n${_336‍.a("CYAN",CYAN)}<%%%%|==========> Attack End${_336‍.a("ANSI",ANSI)}`);
        } else {
          opponent.health -= skill.damage;
          this.counter++;
          console.log(
            `\n${_336‍.a("CYAN",CYAN)}<%%%%|==========> Attack Start${_336‍.a("ANSI",ANSI)}\n\n${_336‍.a("GREEN",GREEN)}${this.name}${_336‍.a("ANSI",ANSI)} attacks ${_336‍.a("RED",RED)}${opponent.name}${_336‍.a("ANSI",ANSI)} with ${_336‍.a("BLUE",BLUE)}${skill.attack}${_336‍.a("ANSI",ANSI)} inflicting ${_336‍.a("RED",RED)}${skill.damage} damage.${_336‍.a("ANSI",ANSI)}\n`
          );
          this.showStatus();
          opponent.showStatus();
          console.log(`\n${_336‍.a("CYAN",CYAN)}<%%%%|==========> Attack End${_336‍.a("ANSI",ANSI)}`);
        }
      } else {
        console.log(`${_336‍.a("RED",RED)}Not enough magic!${_336‍.a("ANSI",ANSI)}`);
      }
    }
  }
  counterAttack(selectedPokemon, randomAttackSkill) {
    let critChance = [Math.floor(Math.random() * 10)];
    if (critChance >= 8) {
      this.magic -= randomAttackSkill.magic;
      randomAttackSkill.damage = randomAttackSkill.damage * 2;
      selectedPokemon.health -= randomAttackSkill.damage;
      console.log(
        `\n${_336‍.a("CYAN",CYAN)}<%%%%|==========> Counter Attack Start${_336‍.a("ANSI",ANSI)}\n\n${_336‍.a("RED",RED)}CRITICAL HIT!${_336‍.a("ANSI",ANSI)}\n\n${_336‍.a("RED",RED)}${this.name}${_336‍.a("ANSI",ANSI)} counters ${_336‍.a("GREEN",GREEN)}${selectedPokemon.name}${_336‍.a("ANSI",ANSI)} with ${_336‍.a("BLUE",BLUE)}${randomAttackSkill.attack}${_336‍.a("ANSI",ANSI)} inflicting ${_336‍.a("RED",RED)}${randomAttackSkill.damage} critical damage.${_336‍.a("ANSI",ANSI)}\n`
      );
    } else {
      this.magic -= randomAttackSkill.magic;
      selectedPokemon.health -= randomAttackSkill.damage;
      console.log(
        `\n${_336‍.a("CYAN",CYAN)}<%%%%|==========> Counter Attack Start${_336‍.a("ANSI",ANSI)}\n\n${_336‍.a("RED",RED)}${this.name}${_336‍.a("ANSI",ANSI)} counters ${_336‍.a("GREEN",GREEN)}${selectedPokemon.name}${_336‍.a("ANSI",ANSI)} with ${_336‍.a("BLUE",BLUE)}${randomAttackSkill.attack}${_336‍.a("ANSI",ANSI)} inflicting ${_336‍.a("RED",RED)}${randomAttackSkill.damage} damage.${_336‍.a("ANSI",ANSI)}\n`
      );
    }
    this.showStatus();
    selectedPokemon.showStatus();
    console.log(`\n${_336‍.a("CYAN",CYAN)}<%%%%|==========> Counter Attack End${_336‍.a("ANSI",ANSI)}`);
  }
};_336‍.j(["Pokemon"]);
       class AttackSkill {
  constructor(attack, damage, magic) {
    this.attack = attack;
    this.damage = damage;
    this.magic = magic;
  }
};_336‍.j(["AttackSkill"]);
